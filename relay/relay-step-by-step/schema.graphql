  """ This is a description. It's like the Javadocs of GraphQL.

      It can be multiline.
  """
  type Query {
      # This is a code comment. It won't show up in the GraphiQL documentation tab.
      # Best Practice 1: list items should be non-nullable
      """ Returns a collection of all issues in the system """
      issues(filter: IssueFilter): [Issue!]

      """ Returns a collection of all comments in the system """
      comments: [Comment!]

      concrete: Concrete
  }

  type Mutation {
      # Best Practice 4: Use input types instead of multiple arguments
      addIssue(input: IssueInput!): Issue
  }

  """ Input type used to filter issues """
  input IssueFilter {
    text: String
    type: IssueType
  }

  """ Contains issue data """
  type Issue {
      # Best Practice 2: Id fields should be typed with ID
      id: ID!
      # Best Practice 3: Avoid making output fields non-nullable 
      title: String
      description: String

      type: IssueType

      """ List of comments associated with the issue """
      comments: [Comment!]
  }

  """ Issue input type """
  input IssueInput {
      title: String!
      description: String!
      type: IssueType!
      date: Date!
  }

  """ A comment that is added to an issue """
  type Comment {
      id: ID!
      content: String
      dateAdded: Date
  }

  enum IssueType {
      TASK,
      BUG,
      EPIC
  }

  scalar Date 